#ifndef PONGSERVERVIEW_HPP
#define PONGSERVERVIEW_HPP

#include <QWidget>

/*! \namespace Ui
 *namespace automatically generated by QtDesigner
 */
namespace Ui {
    class PongServerView;
}

/*!
 * \brief The PongServerView class is the GUI of the PongServer
 */
class PongServerView : public QWidget
{
    Q_OBJECT
public:
    /*!
     * \brief Constructor
     */
    PongServerView();

    ~PongServerView();

    /*!
     * \brief Sets the text displayed in the status text field
     * \param status new status message
     */
    void setStatus(const QString & status);

    /*!
     * \brief appends a status message to the one already displayed
     * \param status messages to be appended
     */
    void appendStatus(const QString &status);

    /*!
     * \brief Enables the button start on the GUI
     */
    void enableStartButton();

    /*!
     * \brief Disables the button start on the GUI
     */
    void disableStartButton();

    /*!
     * \brief Disables the button quit on the GUI
     */
    void disableQuitButton();

    /*!
     * \brief Gets the status text currently displayed
     * \return status text
     */
    QString status()const;

    /*!
     * \brief Gets the text in lobby address text field
     * \return GUI lobby adress text field value
     */
    QString lobbyHost()const;

    /*!
     * \brief Get the value of the GUI lobby port spinbox
     * \return value of the GUI lobby port spinbox
     */
    qint16 lobbyPort()const;

signals:
    /*!
     * \brief emitted when the button start is clicked
     *This signal is intended to PongServer, and should be connected to PongServer::startRequestedSlot() slot
     */
    void startClickedSignal();

    /*!
     * \brief Emitted when the button quit is clicked
     *This signal is intended to PongServer, and should be connected to PongServer::quitSlot() slot
     */
    void exitSignal();

    /*!
     * \brief Emitted when the button connect is clicked
     *This signal is intended to PongServer, and should be connected to PongServer::connectToLobby() slot
     */
    void connectToLobbySignal();

public slots:
    /*!
     * \brief Manages requests for status update
     * \param status the text message shipped by the connected appendStatusSignal
     *This slot should be connected to the appendStatusSignal of any object that wishes to write a status in the GUI
     */
    void appendStatusSlot(const QString & status);

    /*!
     * \brief relay a connect to lobby order from GUI to PongServer
     */
    void connectToLobby();

private slots:
    /*!
     * \brief Relays a start order from GUI to PongServer
     */
    void startClickedSlot();

    /*!
     * \brief Relays a quit order from GUI to PongServer
     */
    void quitClickedSlot();

private:
    Ui::PongServerView * _ui; /*!< Provided by Qt Designer*/
};

#endif // PONGSERVERVIEW_HPP
